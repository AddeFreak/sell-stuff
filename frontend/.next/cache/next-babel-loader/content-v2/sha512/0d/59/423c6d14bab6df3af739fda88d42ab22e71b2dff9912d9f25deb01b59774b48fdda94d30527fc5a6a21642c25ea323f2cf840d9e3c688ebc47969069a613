{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/Checkout.js\";\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport nProgress from 'nprogress';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-19sk44-0\"\n})([\"display:grid;gap:1rem;padding:1rem;font-weight:100;\"]);\nconst CheckoutButton = styled.button.withConfig({\n  displayName: \"Checkout__CheckoutButton\",\n  componentId: \"sc-19sk44-1\"\n})([\"display:inline-block;padding:1rem;font-weight:100;border:1px;border-radius:3px;font-size:2rem;color:white;background-color:rgb(9,0,124);\"]);\nconst stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n/* const [stripePromise, setStripePromise] = useState(() =>\n    loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY)\n) */\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    nProgress.start();\n    console.log('Clicky');\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod);\n\n    if (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutButton, {\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\nfunction Checkout() {\n  /* const [stripePromise, setStripePromise] = useState(() =>\n      loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY)\n  ) */\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/Checkout.js"],"names":["CardElement","Elements","useElements","useStripe","loadStripe","nProgress","useState","styled","CheckoutFormStyles","form","CheckoutButton","button","stripePromise","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","loading","setLoading","stripe","elements","handleSubmit","e","preventDefault","start","console","log","paymentMethod","createPaymentMethod","type","card","getElement","done","message","Checkout"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,yBAA9D;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,kBAAkB,GAAGD,MAAM,CAACE,IAAV;AAAA;AAAA;AAAA,2DAAxB;AAMA,MAAMC,cAAc,GAAGH,MAAM,CAACI,MAAV;AAAA;AAAA;AAAA,gJAApB;AAUC,MAAMC,aAAa,GAAGR,UAAU,CAACS,OAAO,CAACC,GAAR,CAAYC,sBAAb,CAAhC;AACD;AACA;AACA;;AAEA,SAASC,YAAT,GAAwB;AACvB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBZ,QAAQ,EAAlC;AACC,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMe,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,QAAQ,GAAGpB,WAAW,EAA5B;;AACA,iBAAeqB,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAf,IAAAA,SAAS,CAACqB,KAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,UAAM;AAAEX,MAAAA,KAAF;AAASY,MAAAA;AAAT,QAA2B,MAAMR,MAAM,CAACS,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEV,QAAQ,CAACW,UAAT,CAAoBjC,WAApB;AAFwD,KAA3B,CAAvC;AAIC2B,IAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;;AACA,QAAIZ,KAAJ,EAAW;AACTC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAf,IAAAA,SAAS,CAAC6B,IAAV;AACD;;AACC,sBAEE,QAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEX,YAA9B;AAAA,eACGN,KAAK,iBAAI;AAAA,gBAAIA,KAAK,CAACkB;AAAV;AAAA;AAAA;AAAA;AAAA,YADZ,eAEI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AASH;;AACD,SAASC,QAAT,GAAoB;AAClB;AACF;AACA;AACE,sBACE,QAAC,QAAD;AAAU,IAAA,MAAM,EAAExB,aAAlB;AAAA,2BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAMC;;AAEH,SAAQwB,QAAR","sourcesContent":["import { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport nProgress from 'nprogress'\nimport { useState } from 'react'\nimport styled from 'styled-components'\n\nconst CheckoutFormStyles = styled.form`\n    display: grid;\n    gap: 1rem;\n    padding: 1rem;\n    font-weight: 100;\n`\nconst CheckoutButton = styled.button`\n    display: inline-block;\n    padding: 1rem;\n    font-weight: 100;\n    border: 1px;\n    border-radius: 3px;\n    font-size: 2rem;\n    color: white;\n    background-color: rgb(9, 0, 124);\n    `\n const stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY) \n/* const [stripePromise, setStripePromise] = useState(() =>\n    loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY)\n) */\n\nfunction CheckoutForm() {\n const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  async function handleSubmit(e) {\n    e.preventDefault()\n    setLoading(true)\n    nProgress.start()\n    console.log('Clicky')\n   const { error, paymentMethod } = await stripe.createPaymentMethod({\n       type: 'card',\n       card: elements.getElement(CardElement),\n   })\n    console.log(paymentMethod)\n    if (error) {\n      setError(error)\n    }\n\n    setLoading(false)\n    nProgress.done()\n  }\n    return (\n      \n      <CheckoutFormStyles onSubmit={handleSubmit}>\n        {error && <p>{error.message}</p>}\n          <CardElement />\n          <CheckoutButton>Pay</CheckoutButton>\n        </CheckoutFormStyles>\n    \n    )\n}\nfunction Checkout() {\n  /* const [stripePromise, setStripePromise] = useState(() =>\n      loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY)\n  ) */\n  return (\n    <Elements stripe={stripePromise} >\n      <CheckoutForm/>\n     </Elements >\n  )\n    \n  }\n\nexport {Checkout}\n"]},"metadata":{},"sourceType":"module"}