{"ast":null,"code":"import _defineProperty from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from 'react';\nexport default function useForm() {\n  _s();\n\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var onSubmit = arguments.length > 1 ? arguments[1] : undefined;\n\n  var _useState = useState(initialState),\n      formData = _useState[0],\n      setFormData = _useState[1];\n\n  useEffect(function () {\n    var stateValue = {\n      initialState: initialState\n    };\n    setFormData(initialState);\n  }, [initialState]);\n  var stateValue = {\n    initialState: initialState\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        value = _e$target.value,\n        name = _e$target.name,\n        type = _e$target.type;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      value = e.target.files[0];\n    }\n\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, name, value)));\n  };\n  /*   const handleSubmit = (e) => {\n        e.preventDefault()\n        onSubmit.console.log(formData)\n    } */\n\n\n  var resetForm = function resetForm() {\n    setFormData(initialState);\n  };\n\n  return {\n    formData: formData,\n    handleInputChange: handleInputChange,\n    resetForm: resetForm,\n    stateValue: stateValue\n  };\n}\n\n_s(useForm, \"caVhFiprEG24WOw+7EBIyHBhQdo=\");","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/lib/useForm.js"],"names":["useEffect","useState","useForm","initialState","onSubmit","formData","setFormData","stateValue","handleInputChange","e","target","value","name","type","parseInt","files","resetForm"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,OAAT,GAA8C;AAAA;;AAAA,MAA7BC,YAA6B,uEAAd,EAAc;AAAA,MAAVC,QAAU;;AAAA,kBACzBH,QAAQ,CAACE,YAAD,CADiB;AAAA,MAClDE,QADkD;AAAA,MACxCC,WADwC;;AAGvDN,EAAAA,SAAS,CAAC,YAAM;AAClB,QAAMO,UAAU,GAAG;AAAEJ,MAAAA,YAAY,EAAZA;AAAF,KAAnB;AACAG,IAAAA,WAAW,CAACH,YAAD,CAAX;AACD,GAHY,EAGV,CAACA,YAAD,CAHU,CAAT;AAIJ,MAAMI,UAAU,GAAG;AAAEJ,IAAAA,YAAY,EAAZA;AAAF,GAAnB;;AAEA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAAA,oBACHA,CAAC,CAACC,MADC;AAAA,QACzBC,KADyB,aACzBA,KADyB;AAAA,QAClBC,IADkB,aAClBA,IADkB;AAAA,QACZC,IADY,aACZA,IADY;;AAE/B,QAAIA,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGG,QAAQ,CAACH,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AACnBF,MAAAA,KAAK,GAAGF,CAAC,CAACC,MAAF,CAASK,KAAT,CAAe,CAAf,CAAR;AACD;;AACGT,IAAAA,WAAW,iCAAMD,QAAN,2BAAiBO,IAAjB,EAAwBD,KAAxB,GAAX;AACH,GATH;AAUF;AACA;AACA;AACA;;;AACE,MAAMK,SAAS,GAAE,SAAXA,SAAW,GAAM;AACrBV,IAAAA,WAAW,CAACH,YAAD,CAAX;AACD,GAFD;;AAGE,SAAO;AAAEE,IAAAA,QAAQ,EAARA,QAAF;AAAYG,IAAAA,iBAAiB,EAAjBA,iBAAZ;AAA+BQ,IAAAA,SAAS,EAATA,SAA/B;AAA0CT,IAAAA,UAAU,EAAVA;AAA1C,GAAP;AACH;;GA3BuBL,O","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport default function useForm(initialState = {}, onSubmit) {\n    const [formData, setFormData] = useState(initialState)\n\n      useEffect(() => {\n    const stateValue = { initialState }\n    setFormData(initialState)\n  }, [initialState]) \n  const stateValue = { initialState }\n\n  const handleInputChange = (e) => {\n    let { value, name, type } = e.target\n    if (type === 'number') {\n      value = parseInt(value)\n    }\n    if (type === 'file') {\n      value = e.target.files[0]\n    }\n        setFormData({ ...formData, [name]: value })\n    }\n/*   const handleSubmit = (e) => {\n      e.preventDefault()\n      onSubmit.console.log(formData)\n  } */\n  const resetForm =() => {\n    setFormData(initialState)\n  }\n    return { formData, handleInputChange, resetForm, stateValue }\n}\n\n"]},"metadata":{},"sourceType":"module"}