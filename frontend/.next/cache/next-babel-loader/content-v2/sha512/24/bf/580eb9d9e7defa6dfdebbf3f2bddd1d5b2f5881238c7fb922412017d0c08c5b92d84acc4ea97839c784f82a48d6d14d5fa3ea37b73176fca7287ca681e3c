{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nexport default function useForm(initialState = {}, onSubmit) {\n  const {\n    0: formData,\n    1: setFormData\n  } = useState(initialState);\n\n  const handleInputChange = e => {\n    let {\n      value,\n      name,\n      type\n    } = e.target;\n\n    if (type === 'number') {\n      value = parseInt(value);\n    }\n\n    if (type === 'file') {\n      value = e.target.files[0];\n    }\n\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [name]: value\n    }));\n  };\n  /*   const handleSubmit = (e) => {\n        e.preventDefault()\n        onSubmit.console.log(formData)\n    } */\n\n\n  const resetForm = () => {\n    setFormData(initialState);\n  };\n\n  return {\n    formData,\n    handleInputChange,\n    resetForm\n  };\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/lib/useForm.js"],"names":["useState","useForm","initialState","onSubmit","formData","setFormData","handleInputChange","e","value","name","type","target","parseInt","files","resetForm"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,OAAT,CAAiBC,YAAY,GAAG,EAAhC,EAAoCC,QAApC,EAA8C;AACzD,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAACE,YAAD,CAAxC;;AAEF,QAAMI,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,QAAI;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAwBH,CAAC,CAACI,MAA9B;;AACA,QAAID,IAAI,KAAK,QAAb,EAAuB;AACrBF,MAAAA,KAAK,GAAGI,QAAQ,CAACJ,KAAD,CAAhB;AACD;;AACD,QAAIE,IAAI,KAAK,MAAb,EAAqB;AACnBF,MAAAA,KAAK,GAAGD,CAAC,CAACI,MAAF,CAASE,KAAT,CAAe,CAAf,CAAR;AACD;;AACGR,IAAAA,WAAW,iCAAMD,QAAN;AAAgB,OAACK,IAAD,GAAQD;AAAxB,OAAX;AACH,GATH;AAUF;AACA;AACA;AACA;;;AACE,QAAMM,SAAS,GAAE,MAAM;AACrBT,IAAAA,WAAW,CAACH,YAAD,CAAX;AACD,GAFD;;AAGE,SAAO;AAAEE,IAAAA,QAAF;AAAYE,IAAAA,iBAAZ;AAA+BQ,IAAAA;AAA/B,GAAP;AACH","sourcesContent":["import { useState } from 'react'\n\nexport default function useForm(initialState = {}, onSubmit) {\n    const [formData, setFormData] = useState(initialState)\n\n  const handleInputChange = (e) => {\n    let { value, name, type } = e.target\n    if (type === 'number') {\n      value = parseInt(value)\n    }\n    if (type === 'file') {\n      value = e.target.files[0]\n    }\n        setFormData({ ...formData, [name]: value })\n    }\n/*   const handleSubmit = (e) => {\n      e.preventDefault()\n      onSubmit.console.log(formData)\n  } */\n  const resetForm =() => {\n    setFormData(initialState)\n  }\n    return { formData, handleInputChange, resetForm }\n}\n\n"]},"metadata":{},"sourceType":"module"}