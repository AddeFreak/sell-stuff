{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/SingleProduct.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Head from 'next/head';\nimport styled from 'styled-components';\nimport ErrorMessage from './ErrorMessage';\nconst ProductStyle = styled.div.withConfig({\n  displayName: \"SingleProduct__ProductStyle\",\n  componentId: \"sc-1o2gef5-0\"\n})([\"display:grid;grid-auto-columns:1fr;grid-auto-flow:column;max-width:1000px;gap:2rem;img{width:100%;height:100%;object-fit:contain;}\"]);\nexport const SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!) {\n        Product(where: { id: $id }) {\n            name\n            price\n            description\n            id\n            picture {\n              image {\n                publicUrlTransformed\n              }\n            }\n        }\n    }\n`;\nexport default function SingleProduct({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ProductStyle, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sell Stuff | \", data.Product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.Product.picture.image.publicUrlTransformed,\n      alt: data.Product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: data.Product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.Product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/SingleProduct.js"],"names":["useQuery","gql","Head","styled","ErrorMessage","ProductStyle","div","SINGLE_PRODUCT_QUERY","SingleProduct","id","data","loading","error","variables","Product","name","picture","image","publicUrlTransformed","description"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,0IAAlB;AAaA,OAAO,MAAMC,oBAAoB,GAAGN,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdO;AAeP,eAAe,SAASO,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BZ,QAAQ,CAACO,oBAAD,EAAuB;AAC9DM,IAAAA,SAAS,EAAE;AACPJ,MAAAA,EAAE,EAAEA;AADG;AADmD,GAAvB,CAAzC;AAKE,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI,QAAC,YAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,oCAAqBF,IAAI,CAACI,OAAL,CAAaC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAIA;AACgB,MAAA,GAAG,EAAEL,IAAI,CAACI,OAAL,CAAaE,OAAb,CAAqBC,KAArB,CAA2BC,oBADhD;AAEgB,MAAA,GAAG,EAAER,IAAI,CAACI,OAAL,CAAaC;AAFlC;AAAA;AAAA;AAAA;AAAA,YAJA,eAQI;AAAA,8BACI;AAAA,kBAAKL,IAAI,CAACI,OAAL,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIL,IAAI,CAACI,OAAL,CAAaK;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport Head from 'next/head'\nimport styled from 'styled-components'\nimport ErrorMessage from './ErrorMessage'\n\nconst ProductStyle = styled.div`\n    display: grid;\n    grid-auto-columns: 1fr;\n    grid-auto-flow: column;\n    max-width: 1000px;\n    gap: 2rem;\n    img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n    }\n`\n\nexport const SINGLE_PRODUCT_QUERY = gql`\n    query SINGLE_PRODUCT_QUERY($id: ID!) {\n        Product(where: { id: $id }) {\n            name\n            price\n            description\n            id\n            picture {\n              image {\n                publicUrlTransformed\n              }\n            }\n        }\n    }\n`\nexport default function SingleProduct({ id }) {\n  const { data, loading, error } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n        id: id\n      }\n    })\n    if (loading) return <p>Loading...</p>\n    if (error) return <ErrorMessage error={error}/>\n    return (\n        <ProductStyle>\n            <Head>\n                <title>Sell Stuff | {data.Product.name}</title>\n        </Head>\n        <img\n                        src={data.Product.picture.image.publicUrlTransformed}\n                        alt={data.Product.name}\n                    />\n            <div>\n                <h3>{data.Product.name}</h3>\n                <p>{data.Product.description}</p>\n            </div>\n        </ProductStyle>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}