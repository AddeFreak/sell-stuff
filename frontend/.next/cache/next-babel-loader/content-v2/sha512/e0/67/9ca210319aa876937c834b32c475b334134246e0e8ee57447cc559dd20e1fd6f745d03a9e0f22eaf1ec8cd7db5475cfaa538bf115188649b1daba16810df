{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int{\\n  allProducts(first: $first, skip: $skip ) {\\n    id\\n    name\\n    price\\n    description\\n    picture {\\n      id\\n      image {\\n        publicUrlTransformed\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport { perPage } from '../config';\nimport Product from './Product';\nexport var ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsStyle = styled.div.withConfig({\n  displayName: \"Products__ProductsStyle\",\n  componentId: \"sc-2qyyte-0\"\n})([\"display:grid;grid-template-columns:repeat(2,1fr);gap:50px;@media (max-width:425px){font-size:10px;padding:0 10px;grid-template-columns:repeat(1,1fr);}\"]);\n_c = ProductsStyle;\nexport default function Products(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data, error, loading);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsStyle, {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsStyle\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/Products.js"],"names":["useQuery","gql","styled","perPage","Product","ALL_PRODUCTS_QUERY","ProductsStyle","div","Products","page","variables","skip","first","data","error","loading","console","log","message","allProducts","map","product","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAe,aAAf;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAO,IAAMC,kBAAkB,GAAGJ,GAAH,mBAAxB;AAgBP,IAAMK,aAAa,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,8JAAnB;KAAMD,a;AAUN,eAAe,SAASE,QAAT,OAA4B;AAAA;;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACRT,QAAQ,CAACK,kBAAD,EAAqB;AAC5DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEF,IAAI,GAAGN,OAAP,GAAiBA,OADd;AAETS,MAAAA,KAAK,EAAET;AAFE;AADiD,GAArB,CADA;AAAA,MACjCU,IADiC,aACjCA,IADiC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,OADoB,aACpBA,OADoB;;AAOvCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;AACA,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI;AAAA,2BACE,QAAC,aAAD;AAAA,gBACCL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,UAAAC,OAAO;AAAA,4BACtB,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA;AAAnC,WAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,iBADsB;AAAA,OAA5B;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAnBuBd,Q;UACWR,Q;;;MADXQ,Q","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from'graphql-tag'\nimport styled from 'styled-components'\nimport { perPage } from '../config'\nimport Product from './Product'\n\nexport const ALL_PRODUCTS_QUERY = gql`\nquery ALL_PRODUCTS_QUERY($skip: Int = 0, $first: Int{\n  allProducts(first: $first, skip: $skip ) {\n    id\n    name\n    price\n    description\n    picture {\n      id\n      image {\n        publicUrlTransformed\n      }\n    }\n  }\n}\n` \nconst ProductsStyle = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 50px;\n    @media (max-width: 425px) {\n        font-size: 10px;\n        padding: 0 10px;\n        grid-template-columns: repeat(1, 1fr);\n    }\n`\nexport default function Products({ page }) {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY, {\n    variables: {\n      skip: page * perPage - perPage,\n      first: perPage\n      }\n    })\n    console.log(data, error, loading)\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n    return (\n        <div>\n          <ProductsStyle>\n          {data.allProducts.map(product => (\n                 <Product key={product.id} product={product} />\n             ))}\n             </ProductsStyle>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}