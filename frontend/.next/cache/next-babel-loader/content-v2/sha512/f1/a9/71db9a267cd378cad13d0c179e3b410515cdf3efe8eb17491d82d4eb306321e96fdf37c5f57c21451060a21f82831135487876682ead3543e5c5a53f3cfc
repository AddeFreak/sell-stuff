{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n query SINGLE_ORDER_QUERY($id: ID!){\\n   order: Order(where: \\xA0{id : $id}){\\n     id\\n     charge\\n     total\\n     user {\\n       id\\n     }\\n     items {\\n       id\\n       name\\n       description\\n       price\\n       quantity\\n       picture {\\n         image {\\n           publicUrlTransformed\\n         }\\n      }\\n     }\\n   }\\n }\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../../components/ErrorMessage';\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hey \", order.total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SingleOrderPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleOrderPage\");","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js"],"names":["useQuery","gql","ErrorMessage","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading","order","total"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;AAyBA,eAAe,SAASG,eAAT,OAAoC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACdL,QAAQ,CAACG,kBAAD,EAAqB;AAC1DG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAZ;AAD+C,GAArB,CADM;AAAA,MACvCC,IADuC,aACvCA,IADuC;AAAA,MACjCC,KADiC,aACjCA,KADiC;AAAA,MAC1BC,OAD0B,aAC1BA,OAD0B;;AAI/C,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AALoC,MAMvCE,KANuC,GAM7BH,IAN6B,CAMvCG,KANuC;AAO/C,sBAAO;AAAA,uBAAUA,KAAK,CAACC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GARuBR,e;UACaJ,Q;;;KADbI,e","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport ErrorMessage from '../../components/ErrorMessage'\n\nconst SINGLE_ORDER_QUERY = gql`\n query SINGLE_ORDER_QUERY($id: ID!){\n   order: Order(where: Â {id : $id}){\n     id\n     charge\n     total\n     user {\n       id\n     }\n     items {\n       id\n       name\n       description\n       price\n       quantity\n       picture {\n         image {\n           publicUrlTransformed\n         }\n      }\n     }\n   }\n }\n\n`\nexport default function SingleOrderPage({ query }) {\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\n        variables: { id: query.id },\n    })\n    if (loading) return <p>Loading...</p>\n    if (error) return <ErrorMessage error={error} />\n    const { order } = data\n    return <div>Hey {order.total}</div>\n}\n"]},"metadata":{},"sourceType":"module"}