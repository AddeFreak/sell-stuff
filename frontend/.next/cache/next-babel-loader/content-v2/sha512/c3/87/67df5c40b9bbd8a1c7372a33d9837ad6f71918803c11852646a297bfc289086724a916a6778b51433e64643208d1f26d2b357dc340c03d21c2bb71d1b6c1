{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation UPDATE_PRODUCT_MUTATION(\\n        $id: ID!\\n        $imageId: ID!\\n        $name: String\\n        $description: String\\n        $price: Int\\n        $image: Upload\\n    ) {\\n        updateProduct(\\n            id: $id\\n            data: {\\n                name: $name\\n                description: $description\\n                price: $price\\n            }\\n        ) {\\n            id\\n            name\\n            description\\n            price\\n            image\\n        }\\n        updateProductImage(\\n            id: $imageId\\n            data: { image: $image, altText: $name }\\n        ) {\\n            id\\n            altText\\n            image {\\n                publicUrlTransformed\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nimport useForm from \"../lib/useForm\";\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct';\nvar FormStyle = styled.form.withConfig({\n  displayName: \"UpdateProduct__FormStyle\",\n  componentId: \"sc-1u7j0c2-0\"\n})([\"display:flex;justify-content:center;box-shadow:1px 1px 25px rgba(0,0,0,0.35);border-radius:10px;border:6px solid #305a72;input,textarea{width:100%;padding:16px 8px;margin:8px 0;display:inline-block;border:1px solid #ccc;box-sizing:border-box;}button{width:auto;color:white;border:0;font-size:2rem;font-weight:600;padding:0.5rem 1.2rem;background-color:#305a72;}.formcontainer{text-align:left;margin:24px 50px 12px;}.container{padding:16px 0;text-align:left;}fieldset{border:none;}@media screen and (max-width:300px){span.psw{display:block;float:none;}}\"]);\n_c = FormStyle;\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Product),\n      formData = _useForm.formData,\n      handleInputChange = _useForm.handleInputChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id,\n      image: formData.image,\n      name: formData.name,\n      description: formData.description,\n      price: formData.price\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      mutationResponse = _useMutation2[1];\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(FormStyle, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateProduct();\n\n              case 3:\n                res = _context.sent;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: mutationResponse.loading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"file\",\n              name: \"image\",\n              id: \"image\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Name\",\n              value: formData.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"price\",\n              value: formData.price,\n              placeholder: \"Price\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              value: formData.description,\n              placeholder: \"Description\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n\n_s(UpdateProduct, \"w5FeZvUDaQXzkbvD+YHfbQapdPU=\", false, function () {\n  return [useQuery, useForm, useMutation];\n});\n\n_c2 = UpdateProduct;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormStyle\");\n$RefreshReg$(_c2, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","Router","styled","useForm","SINGLE_PRODUCT_QUERY","FormStyle","form","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","Product","formData","handleInputChange","resetForm","image","name","description","price","updateProduct","mutationResponse","message","e","preventDefault","res"],"mappings":"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","sourcesContent":["import { useMutation, useQuery } from \"@apollo/client\"\nimport gql from \"graphql-tag\"\nimport  Router  from \"next/router\"\nimport styled from \"styled-components\"\nimport useForm from \"../lib/useForm\"\n\n\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct'\n\nconst FormStyle = styled.form`\n    display: flex;\n    justify-content: center;\n    box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\n    border-radius: 10px;\n    border: 6px solid #305a72;\n\n    input,\n    textarea {\n        width: 100%;\n        padding: 16px 8px;\n        margin: 8px 0;\n        display: inline-block;\n        border: 1px solid #ccc;\n        box-sizing: border-box;\n    }\n    button {\n        width: auto;\n        color: white;\n        border: 0;\n        font-size: 2rem;\n        font-weight: 600;\n        padding: 0.5rem 1.2rem;\n        background-color: #305a72;\n    }\n    .formcontainer {\n        text-align: left;\n        margin: 24px 50px 12px;\n    }\n    .container {\n        padding: 16px 0;\n        text-align: left;\n    }\n    fieldset {\n        border: none;\n    }\n    @media screen and (max-width: 300px) {\n        span.psw {\n            display: block;\n            float: none;\n        }\n    }\n`\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION(\n        $id: ID!\n        $imageId: ID!\n        $name: String\n        $description: String\n        $price: Int\n        $image: Upload\n    ) {\n        updateProduct(\n            id: $id\n            data: {\n                name: $name\n                description: $description\n                price: $price\n            }\n        ) {\n            id\n            name\n            description\n            price\n            image\n        }\n        updateProductImage(\n            id: $imageId\n            data: { image: $image, altText: $name }\n        ) {\n            id\n            altText\n            image {\n                publicUrlTransformed\n            }\n        }\n    }\n`\n\nexport default function UpdateProduct({id}) {\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY,\n    { variables: { id: id } })\n  const { formData, handleInputChange, resetForm } = useForm(data?.Product)\n  const [updateProduct, mutationResponse] = useMutation(\n      UPDATE_PRODUCT_MUTATION,\n      {\n          variables: {\n          id,\n            image: formData.image,\n              name: formData.name,\n            description: formData.description,\n            price: formData.price,\n              }\n             \n          },\n      \n  )\n\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>{error.message}</p>\n  return (\n      <FormStyle\n          onSubmit={async (e) => {\n              e.preventDefault()\n              const res = await updateProduct()\n\n              /*  Router.push({\n                    pathname: `/product/${res.data.updateProduct.id}`,\n                })   */\n          }}\n      >\n          {/* //Disable fieldset when uploading (aria-busy) \n            DisplayError*/}\n          <fieldset disabled={mutationResponse.loading}>\n              <div className='formcontainer'>\n                  <div className='container'>\n                      <label htmlFor='image'>\n                          <strong>Image</strong>\n                          <input\n                              required\n                              type='file'\n                              name='image'\n                              id='image'\n                              onChange={handleInputChange}\n                          />\n                      </label>\n                      <label htmlFor='name'>\n                          <strong>Name</strong>\n                          <input\n                              type='text'\n                              name='name'\n                              id='name'\n                              placeholder='Name'\n                              value={formData.name}\n                              onChange={handleInputChange}\n                          />\n                      </label>\n                      <label htmlFor='price'>\n                          <strong>Price</strong>\n                          <input\n                              type='number'\n                              name='price'\n                              value={formData.price}\n                              placeholder='Price'\n                              onChange={handleInputChange}\n                          />\n                      </label>\n                      <label htmlFor='description'>\n                          <strong>Description</strong>\n                          <textarea\n                              id='description'\n                              name='description'\n                              value={formData.description}\n                              placeholder='Description'\n                              onChange={handleInputChange}\n                          />\n                      </label>\n                  </div>\n                  <button type='submit'>Update Product</button>\n              </div>\n          </fieldset>\n      </FormStyle>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}