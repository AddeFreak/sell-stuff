{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation RESET_PASSWORD_MUTATION(\\n        $email: String!\\n        $password: String!\\n        $token: String!\\n    ) {\\n        redeemUserPasswordResetToken(\\n            email: $email\\n            token: $token\\n            password: $password\\n        ) {\\n            code\\n            message\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport useForm from '../lib/useForm';\nimport ErrorMessage from './ErrorMessage';\nvar RESET_PASSWORD_MUTATION = gql(_templateObject());\nvar FormStyle = styled.form.withConfig({\n  displayName: \"ResetPassword__FormStyle\",\n  componentId: \"sc-1yrcgx2-0\"\n})([\"display:flex;justify-content:center;box-shadow:1px 1px 25px rgba(0,0,0,0.35);border-radius:10px;border:6px solid #305a72;input,textarea{width:100%;padding:16px 8px;margin:8px 0;display:inline-block;border:1px solid #ccc;box-sizing:border-box;}button{width:auto;color:white;border:0;font-size:2rem;font-weight:600;padding:0.5rem 1.2rem;background-color:#305a72;}.formcontainer{text-align:left;margin:24px 50px 12px;}.container{padding:16px 0;text-align:left;}fieldset{border:none;}\"]);\n_c = FormStyle;\nexport default function ResetPassword(_ref) {\n  _s();\n\n  var _data$redeemUserPassw;\n\n  var token = _ref.token;\n\n  var _useForm = useForm({\n    email: '',\n    password: '',\n    token: token\n  }),\n      formData = _useForm.formData,\n      handleInputChange = _useForm.handleInputChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(RESET_PASSWORD_MUTATION, {\n    variables: formData\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      reset = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      data = _useMutation2$.data,\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var successfulError = data !== null && data !== void 0 && (_data$redeemUserPassw = data.redeemUserPasswordResetToken) !== null && _data$redeemUserPassw !== void 0 && _data$redeemUserPassw.code ? data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken : undefined;\n  console.log(error);\n  return /*#__PURE__*/_jsxDEV(FormStyle, {\n    method: \"POST\",\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return reset();\n\n              case 3:\n                res = _context.sent;\n                console.log(res);\n                resetForm();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error || successfulError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), (data === null || data === void 0 ? void 0 : data.redeemUserPasswordResetToken) === null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Your Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your email address\",\n          autoComplete: \"email\",\n          value: formData.email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: formData.password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"qLiQpdEYRjxflBWH6CIyFWEQZXY=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c2 = ResetPassword;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormStyle\");\n$RefreshReg$(_c2, \"ResetPassword\");","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/ResetPassword.js"],"names":["useMutation","gql","styled","useForm","ErrorMessage","RESET_PASSWORD_MUTATION","FormStyle","form","ResetPassword","token","email","password","formData","handleInputChange","resetForm","variables","reset","data","loading","error","successfulError","redeemUserPasswordResetToken","code","undefined","console","log","e","preventDefault","res"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport useForm from '../lib/useForm'\nimport ErrorMessage from './ErrorMessage'\n\nconst RESET_PASSWORD_MUTATION = gql`\n    mutation RESET_PASSWORD_MUTATION(\n        $email: String!\n        $password: String!\n        $token: String!\n    ) {\n        redeemUserPasswordResetToken(\n            email: $email\n            token: $token\n            password: $password\n        ) {\n            code\n            message\n        }\n    }\n`\n\nconst FormStyle = styled.form`\n    display: flex;\n    justify-content: center;\n    box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\n    border-radius: 10px;\n    border: 6px solid #305a72;\n\n    input,\n    textarea {\n        width: 100%;\n        padding: 16px 8px;\n        margin: 8px 0;\n        display: inline-block;\n        border: 1px solid #ccc;\n        box-sizing: border-box;\n    }\n    button {\n        width: auto;\n        color: white;\n        border: 0;\n        font-size: 2rem;\n        font-weight: 600;\n        padding: 0.5rem 1.2rem;\n        background-color: #305a72;\n    }\n    .formcontainer {\n        text-align: left;\n        margin: 24px 50px 12px;\n    }\n    .container {\n        padding: 16px 0;\n        text-align: left;\n    }\n    fieldset {\n        border: none;\n    }\n`\nexport default function ResetPassword({token}) {\n    const { formData, handleInputChange, resetForm } = useForm({\n        email: '',\n        password: '',\n        token: token,\n    })\n    const [reset, { data, loading, error }] = useMutation(\n        RESET_PASSWORD_MUTATION,{\n            variables: formData,\n    })\n  const successfulError = data?.redeemUserPasswordResetToken?.code ?\n    data?.redeemUserPasswordResetToken : undefined;\n  console.log(error)\n    return (\n        <FormStyle\n            method='POST'\n            onSubmit={async (e) => {\n                e.preventDefault()\n                const res = await reset()\n                console.log(res)\n                resetForm()\n            }}\n        >\n            <ErrorMessage error={error || successfulError} />\n            <fieldset>\n                <h2>Reset Your Password</h2>\n                {data?.redeemUserPasswordResetToken === null && (\n                    <p> Success!</p>\n                )}\n\n                <label htmlFor='email'>\n                    Your Email\n                    <input\n                        type='email'\n                        name='email'\n                        placeholder='Your email address'\n                        autoComplete='email'\n                        value={formData.email}\n                        onChange={handleInputChange}\n                    />\n                </label>\n                <label htmlFor='password'>\n                    Password\n                    <input\n                        type='password'\n                        name='password'\n                        placeholder='Password'\n                        autoComplete='password'\n                        value={formData.password}\n                        onChange={handleInputChange}\n                    />\n                </label>\n                <button type='submit'> Reset Password</button>\n            </fieldset>\n        </FormStyle>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}