{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/CreateProduct.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport useForm from '../lib/useForm';\nimport { ALL_PRODUCTS_QUERY } from './Products';\nconst FormStyle = styled.form.withConfig({\n  displayName: \"CreateProduct__FormStyle\",\n  componentId: \"sc-14px5qf-0\"\n})([\"display:flex;justify-content:center;box-shadow:1px 1px 25px rgba(0,0,0,0.35);border-radius:10px;border:6px solid #305a72;input,textarea{width:100%;padding:16px 8px;margin:8px 0;display:inline-block;border:1px solid #ccc;box-sizing:border-box;}button{width:auto;color:white;border:0;font-size:2rem;font-weight:600;padding:0.5rem 1.2rem;background-color:#305a72;}.formcontainer{text-align:left;margin:24px 50px 12px;}.container{padding:16px 0;text-align:left;}fieldset{border:none;}@media screen and (max-width:300px){span.psw{display:block;float:none;}}\"]);\nconst CREATE_PRODUCT_MUTATION = gql`\n    mutation CREATE_PRODUCT_MUTATION(\n        $name: String!\n        $description: String!\n        $price: Int!\n        $image: Upload\n    ) {\n        createProduct(\n            data: {\n                name: $name\n                description: $description\n                price: $price\n                status: \"AVAILABLE\"\n                picture: { create: { image: $image, altText: $name } }\n            }\n        ) {\n            id\n            price\n            description\n            name\n        }\n    }\n`;\nexport default function CreateProduct() {\n  const {\n    formData,\n    handleInputChange,\n    resetForm\n  } = useForm({\n    image: '',\n    name: 'Cool Name',\n    price: 243,\n    description: 'This is description.'\n  });\n  const [createProduct, {\n    data,\n    error,\n    loading\n  }] = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: formData,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(FormStyle, {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await createProduct();\n      resetForm();\n      /* clear file after upload */\n\n      Router.push({\n        pathname: `/product/${res.data.createProduct.id}`\n      });\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: loading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              required: true,\n              type: \"file\",\n              name: \"image\",\n              id: \"image\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Name\",\n              value: formData.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"price\",\n              value: formData.price,\n              placeholder: \"Price\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              value: formData.description,\n              placeholder: \"Description\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/CreateProduct.js"],"names":["useMutation","gql","Router","styled","useForm","ALL_PRODUCTS_QUERY","FormStyle","form","CREATE_PRODUCT_MUTATION","CreateProduct","formData","handleInputChange","resetForm","image","name","price","description","createProduct","data","error","loading","variables","refetchQueries","query","message","e","preventDefault","res","push","pathname","id"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport Router from 'next/router'\nimport styled from 'styled-components'\nimport useForm from '../lib/useForm'\nimport { ALL_PRODUCTS_QUERY } from './Products'\n\nconst FormStyle = styled.form`\n    display: flex;\n    justify-content: center;\n    box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\n    border-radius: 10px;\n    border: 6px solid #305a72;\n\n    input,\n    textarea {\n        width: 100%;\n        padding: 16px 8px;\n        margin: 8px 0;\n        display: inline-block;\n        border: 1px solid #ccc;\n        box-sizing: border-box;\n    }\n    button {\n        width: auto;\n        color: white;\n        border: 0;\n        font-size: 2rem;\n        font-weight: 600;\n        padding: 0.5rem 1.2rem;\n        background-color: #305a72;\n    }\n    .formcontainer {\n        text-align: left;\n        margin: 24px 50px 12px;\n    }\n    .container {\n        padding: 16px 0;\n        text-align: left;\n    }\n    fieldset {\n        border: none;\n    }\n    @media screen and (max-width: 300px) {\n        span.psw {\n            display: block;\n            float: none;\n        }\n    }\n`\nconst CREATE_PRODUCT_MUTATION = gql`\n    mutation CREATE_PRODUCT_MUTATION(\n        $name: String!\n        $description: String!\n        $price: Int!\n        $image: Upload\n    ) {\n        createProduct(\n            data: {\n                name: $name\n                description: $description\n                price: $price\n                status: \"AVAILABLE\"\n                picture: { create: { image: $image, altText: $name } }\n            }\n        ) {\n            id\n            price\n            description\n            name\n        }\n    }\n`\n\nexport default function CreateProduct() {\n    const { formData, handleInputChange, resetForm } = useForm({\n        image: '',\n        name: 'Cool Name',\n        price: 243,\n        description: 'This is description.',\n    })\n    const [createProduct, { data, error, loading }] = useMutation(\n        CREATE_PRODUCT_MUTATION,\n        {\n            variables: formData,\n            refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\n        }\n    )\n\n    if (error) return <p>Error: {error.message}</p>\n    return (\n        <FormStyle\n            onSubmit={async (e) => {\n                e.preventDefault()\n                const res = await createProduct()\n                resetForm()\n                /* clear file after upload */\n                Router.push({\n                    pathname: `/product/${res.data.createProduct.id}`,\n                })\n            }}\n        >\n            {/* //Disable fieldset when uploading (aria-busy) \n            DisplayError*/}\n            <fieldset disabled={loading}>\n                <div className='formcontainer'>\n                    <div className='container'>\n                        <label htmlFor='image'>\n                            <strong>Image</strong>\n                            <input\n                                required\n                                type='file'\n                                name='image'\n                                id='image'\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <label htmlFor='name'>\n                            <strong>Name</strong>\n                            <input\n                                type='text'\n                                name='name'\n                                id='name'\n                                placeholder='Name'\n                                value={formData.name}\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <label htmlFor='price'>\n                            <strong>Price</strong>\n                            <input\n                                type='number'\n                                name='price'\n                                value={formData.price}\n                                placeholder='Price'\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <label htmlFor='description'>\n                            <strong>Description</strong>\n                            <textarea\n                                id='description'\n                                name='description'\n                                value={formData.description}\n                                placeholder='Description'\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                    </div>\n                    <button type='submit'>Add Product</button>\n                </div>\n            </fieldset>\n        </FormStyle>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}