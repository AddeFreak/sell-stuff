{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n query SINGLE_ORDER_QUERY($id: ID!) {\\n   order: Order(where: {id : $id}) {\\n     id\\n     charge\\n     total\\n     user {\\n       id\\n     }\\n     items {\\n       id\\n       name\\n       description\\n       price\\n       quantity\\n       picture {\\n           image {\\n           publicUrlTransformed\\n         }\\n       }\\n     }\\n   }\\n }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport Head from 'next/head';\nimport moneyFormat from '../../lib/moneyFormat';\nvar OrderStyles = styled.div.withConfig({\n  displayName: \"id__OrderStyles\",\n  componentId: \"jwg47p-0\"\n})([\"max-width:1000px;margin:0 auto;border:1px solid var(--offWhite);box-shadow:var(--bs);padding:2rem;border-top:10px solid red;& > p{display:grid;grid-template-columns:1fr 5fr;margin:0;border-bottom:1px solid var(--offWhite);span{padding:1rem;&:first-child{font-weight:900;text-align:right;}}}.order-item{border-bottom:1px solid var(--offWhite);display:grid;grid-template-columns:300px 1fr;align-items:center;grid-gap:2rem;margin:2rem 0;padding-bottom:2rem;img{width:100%;height:100%;object-fit:cover;}}\"]);\n_c = OrderStyles;\nvar SINGLE_ORDER_QUERY = gql(_templateObject());\nexport default function SingleOrderPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  var order = data.order;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sell Stuff - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: moneyFormat(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SingleOrderPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = SingleOrderPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderStyles\");\n$RefreshReg$(_c2, \"SingleOrderPage\");","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js"],"names":["useQuery","gql","styled","ErrorMessage","Head","moneyFormat","OrderStyles","div","SINGLE_ORDER_QUERY","SingleOrderPage","query","variables","id","data","error","loading","order","charge","total"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,IAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,4fAAjB;KAAMD,W;AAoCN,IAAME,kBAAkB,GAAGP,GAAH,mBAAxB;AAwBA,eAAe,SAASQ,eAAT,OAAoC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACdV,QAAQ,CAACQ,kBAAD,EAAqB;AAC1DG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAZ;AAD+C,GAArB,CADM;AAAA,MACvCC,IADuC,aACvCA,IADuC;AAAA,MACjCC,KADiC,aACjCA,KADiC;AAAA,MAC1BC,OAD0B,aAC1BA,OAD0B;;AAI/C,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AALoC,MAMvCE,KANuC,GAM7BH,IAN6B,CAMvCG,KANuC;AAOjD,sBACI,QAAC,WAAD;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA,oCAAqBA,KAAK,CAACJ,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOI,KAAK,CAACJ;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAQI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOI,KAAK,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAOZ,WAAW,CAACW,KAAK,CAACE,KAAP;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBD;;GA1BuBT,e;UACaT,Q;;;MADbS,e","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Head from 'next/head'\nimport moneyFormat from '../../lib/moneyFormat'\n\nconst OrderStyles = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  border: 1px solid var(--offWhite);\n  box-shadow: var(--bs);\n  padding: 2rem;\n  border-top: 10px solid red;\n  & > p {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    margin: 0;\n    border-bottom: 1px solid var(--offWhite);\n    span {\n      padding: 1rem;\n      &:first-child {\n        font-weight: 900;\n        text-align: right;\n      }\n    }\n  }\n  .order-item {\n    border-bottom: 1px solid var(--offWhite);\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    align-items: center;\n    grid-gap: 2rem;\n    margin: 2rem 0;\n    padding-bottom: 2rem;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n`;\n\nconst SINGLE_ORDER_QUERY = gql`\n query SINGLE_ORDER_QUERY($id: ID!) {\n   order: Order(where: {id : $id}) {\n     id\n     charge\n     total\n     user {\n       id\n     }\n     items {\n       id\n       name\n       description\n       price\n       quantity\n       picture {\n           image {\n           publicUrlTransformed\n         }\n       }\n     }\n   }\n }\n`\nexport default function SingleOrderPage({ query }) {\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\n        variables: { id: query.id },\n    })\n    if (loading) return <p>Loading...</p>\n    if (error) return <ErrorMessage error={error} />\n    const { order } = data\n  return (\n      <OrderStyles>\n          <Head>\n              <title>Sell Stuff - {order.id}</title>\n          </Head>\n          <p>\n              <span>Order Id:</span>\n              <span>{order.id}</span>\n          </p>\n          <p>\n              <span>Charge:</span>\n              <span>{order.charge}</span>\n          </p>\n          <p>\n              <span>Order Total:</span>\n              <span>{moneyFormat(order.total)}</span>\n          </p>\n      </OrderStyles>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}