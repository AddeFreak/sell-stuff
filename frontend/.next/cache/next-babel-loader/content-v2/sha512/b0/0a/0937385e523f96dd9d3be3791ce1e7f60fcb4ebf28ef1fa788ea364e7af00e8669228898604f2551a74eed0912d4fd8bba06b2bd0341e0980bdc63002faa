{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/DeleteProduct.js\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nconst DELETE_PRODUCT_MUTATION = gql`\nmutation DELETE_PRODUCT_MUTATION($id: ID!) {\n  deleteProduct(id:$id) {\n    id\n    name\n  }\n}\n`;\n\nfunction updateCache(cache, payload) {\n  console.log(payload);\n  console.log('paylaod');\n  const deleteCache = cache.identify(payload.data.deleteProduct);\n  cache.evict(deleteCache);\n}\n\nexport default function DeleteProduct({\n  id,\n  children\n}) {\n  const [deleteProduct, {\n    loading,\n    error\n  }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id: id\n    },\n    update: updateCache\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      if (confirm('Are you sure you want to delete this item?')) deleteProduct();\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/DeleteProduct.js"],"names":["useMutation","gql","DELETE_PRODUCT_MUTATION","updateCache","cache","payload","console","log","deleteCache","identify","data","deleteProduct","evict","DeleteProduct","id","children","loading","error","variables","update","confirm"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAQC,GAAR,MAAkB,aAAlB;AAEA,MAAMC,uBAAuB,GAAGD,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AAQA,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqC;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,QAAMC,WAAW,GAAGJ,KAAK,CAACK,QAAN,CAAeJ,OAAO,CAACK,IAAR,CAAaC,aAA5B,CAApB;AACAP,EAAAA,KAAK,CAACQ,KAAN,CAAYJ,WAAZ;AACD;;AACD,eAAe,SAASK,aAAT,CAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAvB,EAAwC;AACrD,QAAM,CAACJ,aAAD,EAAgB;AAAEK,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAhB,IAAsCjB,WAAW,CAACE,uBAAD,EAA0B;AAC/EgB,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEA;AAAN,KADoE;AAE/EK,IAAAA,MAAM,EAAEhB;AAFuE,GAA1B,CAAvD;AAIA,sBAAO;AAAQ,IAAA,IAAI,EAAC,QAAb;AACL,IAAA,OAAO,EAAE,MAAM;AACb,UAAIiB,OAAO,CAAC,4CAAD,CAAX,EACET,aAAa;AAChB,KAJI;AAAA,cAIDI;AAJC;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD","sourcesContent":["import { useMutation } from \"@apollo/client\"\nimport  gql  from \"graphql-tag\"\n\nconst DELETE_PRODUCT_MUTATION = gql`\nmutation DELETE_PRODUCT_MUTATION($id: ID!) {\n  deleteProduct(id:$id) {\n    id\n    name\n  }\n}\n`\nfunction updateCache(cache, payload) {\n  console.log(payload)\n  console.log('paylaod')\n  const deleteCache = cache.identify(payload.data.deleteProduct)\n  cache.evict(deleteCache)\n}\nexport default function DeleteProduct({ id, children}) {\n  const [deleteProduct, { loading, error }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: { id: id },\n    update: updateCache\n  })\n  return <button type=\"button\"\n    onClick={() => {\n      if (confirm('Are you sure you want to delete this item?'))\n        deleteProduct()\n    }}>{children}</button>\n}"]},"metadata":{},"sourceType":"module"}