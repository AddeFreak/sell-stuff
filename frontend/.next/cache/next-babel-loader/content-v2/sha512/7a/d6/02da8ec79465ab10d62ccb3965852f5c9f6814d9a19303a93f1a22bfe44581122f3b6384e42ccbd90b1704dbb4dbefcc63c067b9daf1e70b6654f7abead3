{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport Head from 'next/head';\nconst OrderStyles = styled.div.withConfig({\n  displayName: \"id__OrderStyles\",\n  componentId: \"jwg47p-0\"\n})([\"max-width:1000px;margin:0 auto;border:1px solid var(--offWhite);box-shadow:var(--bs);padding:2rem;border-top:10px solid red;& > p{display:grid;grid-template-columns:1fr 5fr;margin:0;border-bottom:1px solid var(--offWhite);span{padding:1rem;&:first-child{font-weight:900;text-align:right;}}}.order-item{border-bottom:1px solid var(--offWhite);display:grid;grid-template-columns:300px 1fr;align-items:center;grid-gap:2rem;margin:2rem 0;padding-bottom:2rem;img{width:100%;height:100%;object-fit:cover;}}\"]);\nconst SINGLE_ORDER_QUERY = gql`\n query SINGLE_ORDER_QUERY($id: ID!) {\n   order: Order(where: {id : $id}) {\n     id\n     charge\n     total\n     user {\n       id\n     }\n     items {\n       id\n       name\n       description\n       price\n       quantity\n       picture {\n           image {\n           publicUrlTransformed\n         }\n       }\n     }\n   }\n }\n`;\nexport default function SingleOrderPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  const {\n    order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: /*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sell Stuff - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js"],"names":["useQuery","gql","styled","ErrorMessage","Head","OrderStyles","div","SINGLE_ORDER_QUERY","SingleOrderPage","query","data","error","loading","variables","id","order"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,4fAAjB;AAoCA,MAAMC,kBAAkB,GAAGN,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvBA;AAwBA,eAAe,SAASO,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAoC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BZ,QAAQ,CAACO,kBAAD,EAAqB;AAC1DM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEL,KAAK,CAACK;AAAZ;AAD+C,GAArB,CAAzC;AAGA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,QAAM;AAAEI,IAAAA;AAAF,MAAYL,IAAlB;AACF,sBAAO,QAAC,WAAD;AAAA,2BACL,QAAC,IAAD;AAAA,6BACE;AAAA,oCAAqBK,KAAK,CAACD,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Head from 'next/head'\n\nconst OrderStyles = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  border: 1px solid var(--offWhite);\n  box-shadow: var(--bs);\n  padding: 2rem;\n  border-top: 10px solid red;\n  & > p {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    margin: 0;\n    border-bottom: 1px solid var(--offWhite);\n    span {\n      padding: 1rem;\n      &:first-child {\n        font-weight: 900;\n        text-align: right;\n      }\n    }\n  }\n  .order-item {\n    border-bottom: 1px solid var(--offWhite);\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    align-items: center;\n    grid-gap: 2rem;\n    margin: 2rem 0;\n    padding-bottom: 2rem;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n`;\n\nconst SINGLE_ORDER_QUERY = gql`\n query SINGLE_ORDER_QUERY($id: ID!) {\n   order: Order(where: {id : $id}) {\n     id\n     charge\n     total\n     user {\n       id\n     }\n     items {\n       id\n       name\n       description\n       price\n       quantity\n       picture {\n           image {\n           publicUrlTransformed\n         }\n       }\n     }\n   }\n }\n`\nexport default function SingleOrderPage({ query }) {\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\n        variables: { id: query.id },\n    })\n    if (loading) return <p>Loading...</p>\n    if (error) return <ErrorMessage error={error} />\n    const { order } = data\n  return <OrderStyles>\n    <Head>\n      <title>Sell Stuff - {order.id}</title>\n      </Head>\n    </OrderStyles>\n}\n"]},"metadata":{},"sourceType":"module"}