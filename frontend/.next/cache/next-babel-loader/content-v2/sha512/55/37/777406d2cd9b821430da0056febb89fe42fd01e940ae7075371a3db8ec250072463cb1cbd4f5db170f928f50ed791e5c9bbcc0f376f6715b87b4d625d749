{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/Checkout.js\";\nimport { useMutation } from '@apollo/client';\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport gql from 'graphql-tag';\nimport { useRouter } from 'next/dist/client/router';\nimport nProgress from 'nprogress';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { useCart } from '../lib/cartState';\nimport { CURRENT_USER_QUERY } from './User';\nconst CheckoutFormStyles = styled.form.withConfig({\n  displayName: \"Checkout__CheckoutFormStyles\",\n  componentId: \"sc-19sk44-0\"\n})([\"display:grid;gap:1rem;padding:1rem;font-weight:100;\"]);\nconst CheckoutButton = styled.button.withConfig({\n  displayName: \"Checkout__CheckoutButton\",\n  componentId: \"sc-19sk44-1\"\n})([\"display:inline-block;padding:1rem;font-weight:100;border:1px;border-radius:3px;font-size:2rem;color:white;background-color:rgb(9,0,124);\"]);\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION($token: String!) {\n        checkout(token: $token) {\n            id\n            charge\n            total\n            items {\n                id\n                name\n            }\n        }\n    }\n`;\nconst stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY);\n\nfunction CheckoutForm() {\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  const {\n    closeCart\n  } = useCart();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n  const router = useRouter();\n  const [checkout, {\n    error: graphQLError\n  }] = useMutation(CREATE_ORDER_MUTATION, {\n    refetchQueries: [{\n      query: CURRENT_USER_QUERY\n    }]\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    console.log('And so it begins..');\n    nProgress.start();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: elements.getElement(CardElement)\n    });\n    console.log(paymentMethod);\n\n    if (error) {\n      setError(error);\n      nProgress.done();\n      return;\n    }\n\n    const order = await checkout({\n      variables: {\n        token: paymentMethod.id\n      }\n    });\n    router.push({\n      pathname: '/order/[id]',\n      query: {\n        id: order.data.checkout.id\n      }\n    });\n    closeCart();\n    setLoading(false);\n    nProgress.done();\n  }\n\n  return /*#__PURE__*/_jsxDEV(CheckoutFormStyles, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }, this), graphQLError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 12\n      },\n      children: graphQLError.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(CheckoutButton, {\n      children: \"Check Out Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n}\n\nfunction Checkout() {\n  const {\n    0: stripePromise,\n    1: setStripePromise\n  } = useState(() => loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY));\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripeLib,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n}\n\nexport { Checkout };","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/Checkout.js"],"names":["useMutation","CardElement","Elements","useElements","useStripe","loadStripe","gql","useRouter","nProgress","useState","styled","useCart","CURRENT_USER_QUERY","CheckoutFormStyles","form","CheckoutButton","button","CREATE_ORDER_MUTATION","stripeLib","process","env","NEXT_PUBLIC_STRIPE_KEY","CheckoutForm","error","setError","closeCart","loading","setLoading","stripe","elements","router","checkout","graphQLError","refetchQueries","query","handleSubmit","e","preventDefault","console","log","start","paymentMethod","createPaymentMethod","type","card","getElement","done","order","variables","token","id","push","pathname","data","fontSize","message","Checkout","stripePromise","setStripePromise"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client'\nimport { CardElement, Elements, useElements, useStripe } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport gql from 'graphql-tag'\nimport { useRouter } from 'next/dist/client/router'\nimport nProgress from 'nprogress'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { useCart } from '../lib/cartState'\nimport { CURRENT_USER_QUERY } from './User'\n\nconst CheckoutFormStyles = styled.form`\n    display: grid;\n    gap: 1rem;\n    padding: 1rem;\n    font-weight: 100;\n`\nconst CheckoutButton = styled.button`\n    display: inline-block;\n    padding: 1rem;\n    font-weight: 100;\n    border: 1px;\n    border-radius: 3px;\n    font-size: 2rem;\n    color: white;\n    background-color: rgb(9, 0, 124);\n    `\nconst CREATE_ORDER_MUTATION = gql`\n    mutation CREATE_ORDER_MUTATION($token: String!) {\n        checkout(token: $token) {\n            id\n            charge\n            total\n            items {\n                id\n                name\n            }\n        }\n    }\n`\n\n const stripeLib = loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY)\n\n function CheckoutForm() {\n     const [error, setError] = useState();\n     const { closeCart } = useCart();\n     const [loading, setLoading] = useState(false);\n     const stripe = useStripe();\n     const elements = useElements();\n     const router = useRouter();\n     const [checkout, { error: graphQLError }] = useMutation(\n         CREATE_ORDER_MUTATION, {\n             refetchQueries: [{query: CURRENT_USER_QUERY}]\n         })\n     async function handleSubmit(e) {\n         e.preventDefault()\n         setLoading(true)\n         console.log('And so it begins..')\n         nProgress.start()\n         const { error, paymentMethod } = await stripe.createPaymentMethod({\n             type: 'card',\n             card: elements.getElement(CardElement),\n         })\n         console.log(paymentMethod)\n         if (error) {\n             setError(error)\n             nProgress.done()\n             return\n         }\n\n         const order = await checkout({\n             variables: {\n                 token: paymentMethod.id\n             }\n         });\n         \n         router.push({\n             pathname: '/order/[id]',\n             query: { id: order.data.checkout.id }\n         });\n         closeCart();\n         setLoading(false);\n         nProgress.done();\n     }\n\n     return (\n         <CheckoutFormStyles onSubmit={handleSubmit}>\n             {error && <p style={{ fontSize: 12 }}>{error.message}</p>}\n             {graphQLError && <p style={{ fontSize: 12 }}>{graphQLError.message}</p>}\n             <CardElement />\n             <CheckoutButton>Check Out Now</CheckoutButton>\n         </CheckoutFormStyles>\n     )\n }\n\nfunction Checkout() {\n   const [stripePromise, setStripePromise] = useState(() =>\n       loadStripe(process.env.NEXT_PUBLIC_STRIPE_KEY)\n   )\n     return (\n         <Elements stripe={stripeLib}>\n             <CheckoutForm />\n         </Elements>\n     )\n }\n\n export { Checkout }\n"]},"metadata":{},"sourceType":"module"}