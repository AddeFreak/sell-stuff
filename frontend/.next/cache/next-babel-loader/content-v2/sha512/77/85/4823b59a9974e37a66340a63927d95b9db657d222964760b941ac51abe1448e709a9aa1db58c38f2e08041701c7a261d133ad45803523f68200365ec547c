{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/orders.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query USER_ORDERS_QUERY(){\\n        allOrders: {\\n            id\\n            charge\\n            total\\n            user {\\n                id\\n            }\\n            items {\\n                id\\n                name\\n                description\\n                price\\n                quantity\\n                picture {\\n                    image {\\n                        publicUrlTransformed\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from '../components/ErrorMessage';\nimport Head from 'next/head';\nimport moneyFormat from '../lib/moneyFormat';\nvar OrderStyles = styled.div.withConfig({\n  displayName: \"orders__OrderStyles\",\n  componentId: \"mzfnm5-0\"\n})([\"max-width:1000px;margin:0 auto;border:1px solid rgb(246,247,247);box-shadow:0 12px 24px 0 rgba(0,0,0,0.09);padding:2rem;border-top:10px solid red;& > p{display:grid;grid-template-columns:1fr 5fr;margin:0;border-bottom:1px solid rgb(246,247,247);span{padding:1rem;&:first-child{font-weight:900;text-align:right;}}}.order-item{border-bottom:1px solid grey;display:grid;grid-template-columns:300px 1fr;align-items:center;grid-gap:2rem;margin:2rem 0;padding-bottom:2rem;img{width:100%;height:100%;object-fit:cover;}}\"]);\nvar USER_ORDERS_QUERY = gql(_templateObject());\nexport default function OrdersPage() {\n  _s();\n\n  var _useQuery = useQuery(USER_ORDERS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  var allOrders = data.allOrders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allOrders.length\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n}\n\n_s(OrdersPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = OrdersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/orders.js"],"names":["useQuery","gql","styled","ErrorMessage","Head","moneyFormat","OrderStyles","div","USER_ORDERS_QUERY","OrdersPage","data","error","loading","allOrders","length"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,IAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAV;AAAA;AAAA;AAAA,wgBAAjB;AAoCA,IAAMC,iBAAiB,GAAGP,GAAH,mBAAvB;AAwBA,eAAe,SAASQ,UAAT,GAAsB;AAAA;;AAAA,kBACAT,QAAQ,CAACQ,iBAAD,CADR;AAAA,MACzBE,IADyB,aACzBA,IADyB;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,OADY,aACZA,OADY;;AAEjC,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAHsB,MAIzBE,SAJyB,GAIXH,IAJW,CAIzBG,SAJyB;AAKjC,sBACE;AAAA,cAAMA,SAAS,CAACC;AAAhB;AAAA;AAAA;AAAA;AAAA,UADF;AAGH;;GARuBL,U;UACaT,Q;;;KADbS,U","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport ErrorMessage from '../components/ErrorMessage'\nimport Head from 'next/head'\nimport moneyFormat from '../lib/moneyFormat'\n\nconst OrderStyles = styled.div`\n    max-width: 1000px;\n    margin: 0 auto;\n    border: 1px solid rgb(246, 247, 247);\n    box-shadow: 0 12px 24px 0 rgba(0, 0, 0, 0.09);\n    padding: 2rem;\n    border-top: 10px solid red;\n    & > p {\n        display: grid;\n        grid-template-columns: 1fr 5fr;\n        margin: 0;\n        border-bottom: 1px solid rgb(246, 247, 247);\n        span {\n            padding: 1rem;\n            &:first-child {\n                font-weight: 900;\n                text-align: right;\n            }\n        }\n    }\n    .order-item {\n        border-bottom: 1px solid grey;\n        display: grid;\n        grid-template-columns: 300px 1fr;\n        align-items: center;\n        grid-gap: 2rem;\n        margin: 2rem 0;\n        padding-bottom: 2rem;\n        img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n    }\n`\n\nconst USER_ORDERS_QUERY = gql`\n    query USER_ORDERS_QUERY(){\n        allOrders: {\n            id\n            charge\n            total\n            user {\n                id\n            }\n            items {\n                id\n                name\n                description\n                price\n                quantity\n                picture {\n                    image {\n                        publicUrlTransformed\n                    }\n                }\n            }\n        }\n    }\n`\nexport default function OrdersPage() {\n    const { data, error, loading } = useQuery(USER_ORDERS_QUERY)\n    if (loading) return <p>Loading...</p>\n    if (error) return <ErrorMessage error={error} />\n    const { allOrders } = data\n    return (\n      <div>{allOrders.length}</div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}