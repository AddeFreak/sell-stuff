{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/UpdateProduct.js\";\nimport { useMutation, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport styled from 'styled-components';\nimport useForm from '../lib/useForm';\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct';\nconst FormStyle = styled.form.withConfig({\n  displayName: \"UpdateProduct__FormStyle\",\n  componentId: \"sc-1u7j0c2-0\"\n})([\"display:flex;justify-content:center;box-shadow:1px 1px 25px rgba(0,0,0,0.35);border-radius:10px;border:6px solid #305a72;input,textarea{width:100%;padding:16px 8px;margin:8px 0;display:inline-block;border:1px solid #ccc;box-sizing:border-box;}button{width:auto;color:white;border:0;font-size:2rem;font-weight:600;padding:0.5rem 1.2rem;background-color:#305a72;}.formcontainer{text-align:left;margin:24px 50px 12px;}.container{padding:16px 0;text-align:left;}fieldset{border:none;}\"]);\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION(\n        $id: ID!\n        $name: String\n        $description: String\n        $price: Int\n    ) {\n        updateProduct(\n            id: $id\n            data: { name: $name, description: $description, price: $price }\n        ) {\n            id\n            name\n            description\n            price\n        }\n    }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  });\n  const {\n    formData,\n    handleInputChange,\n    resetForm\n  } = useForm(data === null || data === void 0 ? void 0 : data.Product);\n  const [updateProduct, mutationResponse] = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id,\n      name: formData.name,\n      description: formData.description,\n      price: formData.price\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(FormStyle, {\n    onSubmit: async e => {\n      e.preventDefault();\n      const res = await updateProduct();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: mutationResponse.loading,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formcontainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              id: \"name\",\n              placeholder: \"Name\",\n              value: formData.name,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"price\",\n              value: formData.price,\n              placeholder: \"Price\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              value: formData.description,\n              placeholder: \"Description\",\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/components/UpdateProduct.js"],"names":["useMutation","useQuery","gql","Router","styled","useForm","SINGLE_PRODUCT_QUERY","FormStyle","form","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","data","error","loading","variables","formData","handleInputChange","resetForm","Product","updateProduct","mutationResponse","name","description","price","message","e","preventDefault","res"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,oBAAT,QAAqC,iBAArC;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,IAAV;AAAA;AAAA;AAAA,weAAf;AA4CA,MAAMC,uBAAuB,GAAGP,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,eAAe,SAASQ,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2Bb,QAAQ,CAACK,oBAAD,EAAuB;AAC5DS,IAAAA,SAAS,EAAE;AAAEJ,MAAAA,EAAE,EAAEA;AAAN;AADiD,GAAvB,CAAzC;AAGA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,iBAAZ;AAA+BC,IAAAA;AAA/B,MAA6Cb,OAAO,CAACO,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,OAAP,CAA1D;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCrB,WAAW,CACjDS,uBADiD,EAEjD;AACIM,IAAAA,SAAS,EAAE;AACPJ,MAAAA,EADO;AAEPW,MAAAA,IAAI,EAAEN,QAAQ,CAACM,IAFR;AAGPC,MAAAA,WAAW,EAAEP,QAAQ,CAACO,WAHf;AAIPC,MAAAA,KAAK,EAAER,QAAQ,CAACQ;AAJT;AADf,GAFiD,CAArD;AAYA,MAAIV,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO;AAAA,cAAIA,KAAK,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACI,QAAC,SAAD;AACI,IAAA,QAAQ,EAAE,MAAOC,CAAP,IAAa;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,GAAG,GAAG,MAAMR,aAAa,EAA/B;AACH,KAJL;AAAA,2BAQI;AAAU,MAAA,QAAQ,EAAEC,gBAAgB,CAACP,OAArC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,MADT;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,EAAE,EAAC,MAHP;AAII,cAAA,WAAW,EAAC,MAJhB;AAKI,cAAA,KAAK,EAAEE,QAAQ,CAACM,IALpB;AAMI,cAAA,QAAQ,EAAEL;AANd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,KAAK,EAAED,QAAQ,CAACQ,KAHpB;AAII,cAAA,WAAW,EAAC,OAJhB;AAKI,cAAA,QAAQ,EAAEP;AALd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAsBI;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,cAAA,EAAE,EAAC,aADP;AAEI,cAAA,IAAI,EAAC,aAFT;AAGI,cAAA,KAAK,EAAED,QAAQ,CAACO,WAHpB;AAII,cAAA,WAAW,EAAC,aAJhB;AAKI,cAAA,QAAQ,EAAEN;AALd;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkCI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH","sourcesContent":["import { useMutation, useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport Router from 'next/router'\nimport styled from 'styled-components'\nimport useForm from '../lib/useForm'\n\nimport { SINGLE_PRODUCT_QUERY } from './SingleProduct'\n\nconst FormStyle = styled.form`\n    display: flex;\n    justify-content: center;\n    box-shadow: 1px 1px 25px rgba(0, 0, 0, 0.35);\n    border-radius: 10px;\n    border: 6px solid #305a72;\n\n    input,\n    textarea {\n        width: 100%;\n        padding: 16px 8px;\n        margin: 8px 0;\n        display: inline-block;\n        border: 1px solid #ccc;\n        box-sizing: border-box;\n    }\n    button {\n        width: auto;\n        color: white;\n        border: 0;\n        font-size: 2rem;\n        font-weight: 600;\n        padding: 0.5rem 1.2rem;\n        background-color: #305a72;\n    }\n    .formcontainer {\n        text-align: left;\n        margin: 24px 50px 12px;\n    }\n    .container {\n        padding: 16px 0;\n        text-align: left;\n    }\n    fieldset {\n        border: none;\n    }\n    /* @media screen and (max-width: 300px) {\n        span.psw {\n            display: block;\n            float: none;\n        } \n    }*/\n`\n\nconst UPDATE_PRODUCT_MUTATION = gql`\n    mutation UPDATE_PRODUCT_MUTATION(\n        $id: ID!\n        $name: String\n        $description: String\n        $price: Int\n    ) {\n        updateProduct(\n            id: $id\n            data: { name: $name, description: $description, price: $price }\n        ) {\n            id\n            name\n            description\n            price\n        }\n    }\n`\n\nexport default function UpdateProduct({ id }) {\n    const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\n        variables: { id: id },\n    })\n    const { formData, handleInputChange, resetForm } = useForm(data?.Product)\n    const [updateProduct, mutationResponse] = useMutation(\n        UPDATE_PRODUCT_MUTATION,\n        {\n            variables: {\n                id,\n                name: formData.name,\n                description: formData.description,\n                price: formData.price,\n            },\n        }\n    )\n\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>{error.message}</p>\n    return (\n        <FormStyle\n            onSubmit={async (e) => {\n                e.preventDefault()\n                const res = await updateProduct()\n            }}\n        >\n            {/* //Disable fieldset when uploading (aria-busy) \n            DisplayError*/}\n            <fieldset disabled={mutationResponse.loading}>\n                <div className='formcontainer'>\n                    <div className='container'>\n                        <label htmlFor='name'>\n                            <strong>Name</strong>\n                            <input\n                                type='text'\n                                name='name'\n                                id='name'\n                                placeholder='Name'\n                                value={formData.name}\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <label htmlFor='price'>\n                            <strong>Price</strong>\n                            <input\n                                type='number'\n                                name='price'\n                                value={formData.price}\n                                placeholder='Price'\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                        <label htmlFor='description'>\n                            <strong>Description</strong>\n                            <textarea\n                                id='description'\n                                name='description'\n                                value={formData.description}\n                                placeholder='Description'\n                                onChange={handleInputChange}\n                            />\n                        </label>\n                    </div>\n                    <button type='submit'>Update Product</button>\n                </div>\n            </fieldset>\n        </FormStyle>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}