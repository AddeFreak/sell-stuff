{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport Head from 'next/head';\nimport moneyFormat from '../../lib/moneyFormat';\nconst OrderStyles = styled.div.withConfig({\n  displayName: \"id__OrderStyles\",\n  componentId: \"jwg47p-0\"\n})([\"max-width:1000px;margin:0 auto;border:1px solid rgb(246,247,247);box-shadow:rgb(246,247,247);padding:2rem;border-top:10px solid red;& > p{display:grid;grid-template-columns:1fr 5fr;margin:0;border-bottom:1px solid rgb(246,247,247);span{padding:1rem;&:first-child{font-weight:900;text-align:right;}}}.order-item{border-bottom:1px solid grey;display:grid;grid-template-columns:300px 1fr;align-items:center;grid-gap:2rem;margin:2rem 0;padding-bottom:2rem;img{width:100%;height:100%;object-fit:cover;}}\"]);\nconst SINGLE_ORDER_QUERY = gql`\n query SINGLE_ORDER_QUERY($id: ID!) {\n   order: Order(where: {id : $id}) {\n     id\n     charge\n     total\n     user {\n       id\n     }\n     items {\n       id\n       name\n       description\n       price\n       quantity\n       picture {\n           image {\n           publicUrlTransformed\n         }\n       }\n     }\n   }\n }\n`;\nexport default function SingleOrderPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {\n      id: query.id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 23\n  }, this);\n  const {\n    order\n  } = data;\n  return /*#__PURE__*/_jsxDEV(OrderStyles, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Sell Stuff - \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Id:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Charge:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.charge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Order Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: moneyFormat(order.total)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"ItemCount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: order.items.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items\",\n      children: order.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.picture.image.publicUrlTransformed,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Quantity: \", item.quantity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Each: \", moneyFormat(item.price)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sub Total: \", moneyFormat(item.price * item.quantity)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/pages/order/[id].js"],"names":["useQuery","gql","styled","ErrorMessage","Head","moneyFormat","OrderStyles","div","SINGLE_ORDER_QUERY","SingleOrderPage","query","data","error","loading","variables","id","order","charge","total","items","length","map","item","picture","image","publicUrlTransformed","title","name","quantity","price","description"],"mappings":"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","sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport styled from 'styled-components'\nimport ErrorMessage from '../../components/ErrorMessage'\nimport Head from 'next/head'\nimport moneyFormat from '../../lib/moneyFormat'\n\nconst OrderStyles = styled.div`\n    max-width: 1000px;\n    margin: 0 auto;\n    border: 1px solid rgb(246, 247, 247);\n    box-shadow: rgb(246, 247, 247);\n    padding: 2rem;\n    border-top: 10px solid red;\n    & > p {\n        display: grid;\n        grid-template-columns: 1fr 5fr;\n        margin: 0;\n        border-bottom: 1px solid rgb(246, 247, 247);\n        span {\n            padding: 1rem;\n            &:first-child {\n                font-weight: 900;\n                text-align: right;\n            }\n        }\n    }\n    .order-item {\n        border-bottom: 1px solid grey;\n        display: grid;\n        grid-template-columns: 300px 1fr;\n        align-items: center;\n        grid-gap: 2rem;\n        margin: 2rem 0;\n        padding-bottom: 2rem;\n        img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n    }\n`\n\nconst SINGLE_ORDER_QUERY = gql`\n query SINGLE_ORDER_QUERY($id: ID!) {\n   order: Order(where: {id : $id}) {\n     id\n     charge\n     total\n     user {\n       id\n     }\n     items {\n       id\n       name\n       description\n       price\n       quantity\n       picture {\n           image {\n           publicUrlTransformed\n         }\n       }\n     }\n   }\n }\n`\nexport default function SingleOrderPage({ query }) {\n    const { data, error, loading } = useQuery(SINGLE_ORDER_QUERY, {\n        variables: { id: query.id },\n    })\n    if (loading) return <p>Loading...</p>\n    if (error) return <ErrorMessage error={error} />\n    const { order } = data\n  return (\n      <OrderStyles>\n          <Head>\n              <title>Sell Stuff - {order.id}</title>\n          </Head>\n          <p>\n              <span>Order Id:</span>\n              <span>{order.id}</span>\n          </p>\n          <p>\n              <span>Charge:</span>\n              <span>{order.charge}</span>\n          </p>\n          <p>\n              <span>Order Total:</span>\n              <span>{moneyFormat(order.total)}</span>\n          </p>\n          <p>\n              <span>ItemCount:</span>\n              <span>{order.items.length}</span>\n      </p>\n      <div className=\"items\">\n        {order.items.map(item => (\n          <div className=\"order-item\" key={item.id}>\n            <img src={item.picture.image.publicUrlTransformed}\n              alt={item.title} />\n            <div className=\"item-details\">\n              <h2>{item.name}</h2>\n              <p>Quantity: {item.quantity}</p>\n              <p>Each: {moneyFormat(item.price)}</p>\n              <p>Sub Total: {moneyFormat(item.price * item.quantity)}</p>\n              <p>{item.description}</p>\n            </div>\n         </div>\n        ))}\n      </div>\n      </OrderStyles>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}