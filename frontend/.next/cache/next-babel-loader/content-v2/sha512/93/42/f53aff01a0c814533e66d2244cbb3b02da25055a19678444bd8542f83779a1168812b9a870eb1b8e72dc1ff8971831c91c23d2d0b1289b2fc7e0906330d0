{"ast":null,"code":"export default function moneyFormat() {\n  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'SEK',\n    minimumFractionDigits: 0 // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  /* if(amount % 100 === 0) {\n  minimumFractionDigits = 0; \n  } */\n\n  return formatter.format(amount);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/lib/moneyFormat.js"],"names":["moneyFormat","amount","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"mappings":"AAAA,eAAe,SAASA,WAAT,GAAiC;AAAA,MAAZC,MAAY,uEAAH,CAAG;AAC5C,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC7CC,IAAAA,KAAK,EAAE,UADsC;AAE7CC,IAAAA,QAAQ,EAAE,KAFmC;AAG7CC,IAAAA,qBAAqB,EAAE,CAHsB,CAI7C;AACA;AACA;;AAN6C,GAA/B,CAAlB;AAQA;AACJ;AACA;;AACI,SAAOL,SAAS,CAACM,MAAV,CAAiBP,MAAjB,CAAP;AACH","sourcesContent":["export default function moneyFormat(amount = 0) {\n    const formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'SEK',\n        minimumFractionDigits: 0,\n        // These options are needed to round to whole numbers if that's what you want.\n        //minimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n        //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n    })\n    /* if(amount % 100 === 0) {\n minimumFractionDigits = 0; \n} */\n    return formatter.format(amount)\n}\n"]},"metadata":{},"sourceType":"module"}