{"ast":null,"code":"export default function moneyFormat() {\n  var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'SEK',\n    minimumFractionDigits: 0 // These options are needed to round to whole numbers if that's what you want.\n    //minimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n    //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n\n  });\n  /* if(amount % 100 === 0) {\n   minimumFractionDigits = 0; \n  \n  } */\n\n  return formatter.format(amount);\n}","map":{"version":3,"sources":["/Users/andreasfricktoresand/Documents/frontend/Examensarbete/sell-stuff/frontend/lib/moneyFormat.js"],"names":["moneyFormat","amount","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","format"],"mappings":"AAAA,eAAe,SAASA,WAAT,GAAgC;AAAA,MAAXC,MAAW,uEAAF,CAAE;AAC/C,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAC/CC,IAAAA,KAAK,EAAE,UADwC;AAE/CC,IAAAA,QAAQ,EAAE,KAFqC;AAG/CC,IAAAA,qBAAqB,EAAE,CAHwB,CAI/C;AACA;AACA;;AAN+C,GAA/B,CAAlB;AAQA;AACA;AACA;AACA;;AACA,SAAOL,SAAS,CAACM,MAAV,CAAiBP,MAAjB,CAAP;AACC","sourcesContent":["export default function moneyFormat(amount = 0){\nconst formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'SEK',\n  minimumFractionDigits: 0,\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 2, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n/* if(amount % 100 === 0) {\n minimumFractionDigits = 0; \n\n} */\nreturn formatter.format(amount)\n}"]},"metadata":{},"sourceType":"module"}